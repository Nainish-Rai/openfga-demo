{
  "info": {
    "name": "OpenFGA RBAC Demo",
    "_postman_id": "b7f6c9a2-1234-4c8a-9a1a-0000demo0001",
    "description": "Postman collection to demo RBAC scenarios with OpenFGA-backed API. Run demo-setup locally first, then Signup to capture tokens.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    { "key": "BASE_URL", "value": "http://localhost:8000" },
    { "key": "ALICE_TOKEN", "value": "" },
    { "key": "BOB_TOKEN", "value": "" },
    { "key": "CHARLIE_TOKEN", "value": "" },
    { "key": "DAVE_TOKEN", "value": "" },
    { "key": "EVE_TOKEN", "value": "" },
    { "key": "SARA_TOKEN", "value": "" }
  ],
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Signup - Alice (Compliance)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{BASE_URL}}/signup",
              "host": ["{{BASE_URL}}"],
              "path": ["signup"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"alice\",\n  \"email\": \"alice@example.com\",\n  \"personId\": \"alice\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));",
                  "const token = pm.response.json().token;",
                  "pm.collectionVariables.set('ALICE_TOKEN', token);",
                  "pm.test('Token captured (ALICE_TOKEN)', () => pm.expect(token).to.be.a('string').and.not.empty);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Signup - Bob (Dept Head)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{BASE_URL}}/signup",
              "host": ["{{BASE_URL}}"],
              "path": ["signup"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"bob\",\n  \"email\": \"bob@example.com\",\n  \"personId\": \"bob\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));",
                  "pm.collectionVariables.set('BOB_TOKEN', pm.response.json().token);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Signup - Charlie (Manager)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{BASE_URL}}/signup",
              "host": ["{{BASE_URL}}"],
              "path": ["signup"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"charlie\",\n  \"email\": \"charlie@example.com\",\n  \"personId\": \"charlie\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));",
                  "pm.collectionVariables.set('CHARLIE_TOKEN', pm.response.json().token);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Signup - Dave (Employee)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{BASE_URL}}/signup",
              "host": ["{{BASE_URL}}"],
              "path": ["signup"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"dave\",\n  \"email\": \"dave@example.com\",\n  \"personId\": \"dave\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));",
                  "pm.collectionVariables.set('DAVE_TOKEN', pm.response.json().token);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Signup - Eve (Employee - direct viewer)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{BASE_URL}}/signup",
              "host": ["{{BASE_URL}}"],
              "path": ["signup"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"eve\",\n  \"email\": \"eve@example.com\",\n  \"personId\": \"eve\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));",
                  "pm.collectionVariables.set('EVE_TOKEN', pm.response.json().token);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Signup - Sara (CO dept2)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{BASE_URL}}/signup",
              "host": ["{{BASE_URL}}"],
              "path": ["signup"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"sara\",\n  \"email\": \"sara@example.com\",\n  \"personId\": \"sara\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));",
                  "pm.collectionVariables.set('SARA_TOKEN', pm.response.json().token);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Scenarios",
      "item": [
        {
          "name": "Just User Case (Eve)",
          "item": [
            {
              "name": "GET /api/circulars (Eve)",
              "request": {
                "method": "GET",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{EVE_TOKEN}}" }
                ],
                "url": {
                  "raw": "{{BASE_URL}}/api/circulars",
                  "host": ["{{BASE_URL}}"],
                  "path": ["api", "circulars"]
                }
              }
            }
          ]
        },
        {
          "name": "Manager Case (Charlie)",
          "item": [
            {
              "name": "GET /api/circulars (Charlie)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{CHARLIE_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{BASE_URL}}/api/circulars",
                  "host": ["{{BASE_URL}}"],
                  "path": ["api", "circulars"]
                }
              }
            }
          ]
        },
        {
          "name": "Dept Head Case (Bob)",
          "item": [
            {
              "name": "GET /api/circulars (Bob)",
              "request": {
                "method": "GET",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{BOB_TOKEN}}" }
                ],
                "url": {
                  "raw": "{{BASE_URL}}/api/circulars",
                  "host": ["{{BASE_URL}}"],
                  "path": ["api", "circulars"]
                }
              }
            },
            {
              "name": "POST /api/circulars (Bob - expect 403)",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{BOB_TOKEN}}" },
                  { "key": "Content-Type", "value": "application/json" }
                ],
                "url": {
                  "raw": "{{BASE_URL}}/api/circulars",
                  "host": ["{{BASE_URL}}"],
                  "path": ["api", "circulars"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"circ3\",\n  \"title\": \"Test\",\n  \"assignedDeptId\": \"dept1\"\n}"
                }
              },
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Forbidden for Bob', () => pm.response.to.have.status(403));"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "Compliance Officer Case (Alice)",
          "item": [
            {
              "name": "GET /api/circulars (Alice)",
              "request": {
                "method": "GET",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{ALICE_TOKEN}}" }
                ],
                "url": {
                  "raw": "{{BASE_URL}}/api/circulars",
                  "host": ["{{BASE_URL}}"],
                  "path": ["api", "circulars"]
                }
              }
            },
            {
              "name": "POST /api/circulars circ3 (Alice)",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{ALICE_TOKEN}}" },
                  { "key": "Content-Type", "value": "application/json" }
                ],
                "url": {
                  "raw": "{{BASE_URL}}/api/circulars",
                  "host": ["{{BASE_URL}}"],
                  "path": ["api", "circulars"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"circ3\",\n  \"title\": \"New Policy\",\n  \"assignedDeptId\": \"dept1\"\n}"
                }
              }
            },
            {
              "name": "PUT /api/circulars/circ3 (Alice)",
              "request": {
                "method": "PUT",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{ALICE_TOKEN}}" },
                  { "key": "Content-Type", "value": "application/json" }
                ],
                "url": {
                  "raw": "{{BASE_URL}}/api/circulars/circ3",
                  "host": ["{{BASE_URL}}"],
                  "path": ["api", "circulars", "circ3"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Updated Policy\"\n}"
                }
              }
            },
            {
              "name": "DELETE /api/circulars/circ3 (Alice)",
              "request": {
                "method": "DELETE",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{ALICE_TOKEN}}" }
                ],
                "url": {
                  "raw": "{{BASE_URL}}/api/circulars/circ3",
                  "host": ["{{BASE_URL}}"],
                  "path": ["api", "circulars", "circ3"]
                }
              }
            }
          ]
        },
        {
          "name": "Cross-Department Manager (Charlie)",
          "item": [
            {
              "name": "Setup: Create dept2 compliance (sara)",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" }
                ],
                "url": {
                  "raw": "{{BASE_URL}}/api/persons",
                  "host": ["{{BASE_URL}}"],
                  "path": ["api", "persons"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"sara\",\n  \"userId\": \"user-sara\",\n  \"name\": \"Sara (CO dept2)\",\n  \"deptId\": \"dept2\",\n  \"roles\": [\"compliance_officer\"]\n}"
                }
              }
            },
            {
              "name": "Setup: Create person frank (dept2, manager=charlie)",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" }
                ],
                "url": {
                  "raw": "{{BASE_URL}}/api/persons",
                  "host": ["{{BASE_URL}}"],
                  "path": ["api", "persons"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"frank\",\n  \"userId\": \"user-frank\",\n  \"name\": \"Frank (Sales)\",\n  \"deptId\": \"dept2\",\n  \"directManagerId\": \"charlie\"\n}"
                }
              }
            },
            {
              "name": "Sara creates dept2 circular (circ_sales)",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{SARA_TOKEN}}" },
                  { "key": "Content-Type", "value": "application/json" }
                ],
                "url": {
                  "raw": "{{BASE_URL}}/api/circulars",
                  "host": ["{{BASE_URL}}"],
                  "path": ["api", "circulars"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"circ_sales\",\n  \"title\": \"Sales Policy\",\n  \"assignedDeptId\": \"dept2\"\n}"
                }
              }
            },
            {
              "name": "Sara assigns circ_sales to subordinate frank",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{SARA_TOKEN}}" },
                  { "key": "Content-Type", "value": "application/json" }
                ],
                "url": {
                  "raw": "{{BASE_URL}}/api/share/circulars/circ_sales/assign-subordinate",
                  "host": ["{{BASE_URL}}"],
                  "path": [
                    "api",
                    "share",
                    "circulars",
                    "circ_sales",
                    "assign-subordinate"
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"personId\": \"frank\"\n}"
                }
              }
            },
            {
              "name": "Assign circ2 to subordinate frank (Charlie)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{CHARLIE_TOKEN}}"
                  },
                  { "key": "Content-Type", "value": "application/json" }
                ],
                "url": {
                  "raw": "{{BASE_URL}}/api/share/circulars/circ2/assign-subordinate",
                  "host": ["{{BASE_URL}}"],
                  "path": [
                    "api",
                    "share",
                    "circulars",
                    "circ2",
                    "assign-subordinate"
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"personId\": \"frank\"\n}"
                }
              }
            },
            {
              "name": "GET /api/circulars (Charlie - cross dept)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{CHARLIE_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{BASE_URL}}/api/circulars",
                  "host": ["{{BASE_URL}}"],
                  "path": ["api", "circulars"]
                }
              }
            },
            {
              "name": "GET /api/circulars (Charlie - after circ_sales)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{CHARLIE_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{BASE_URL}}/api/circulars",
                  "host": ["{{BASE_URL}}"],
                  "path": ["api", "circulars"]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Sharing",
      "item": [
        {
          "name": "Alice shares circ1 with Dave",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{ALICE_TOKEN}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/share/circulars/circ1/share",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "share", "circulars", "circ1", "share"]
            },
            "body": { "mode": "raw", "raw": "{\n  \"personId\": \"dave\"\n}" }
          }
        },
        {
          "name": "Charlie assigns circ2 to Dave",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{CHARLIE_TOKEN}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/share/circulars/circ2/assign-subordinate",
              "host": ["{{BASE_URL}}"],
              "path": [
                "api",
                "share",
                "circulars",
                "circ2",
                "assign-subordinate"
              ]
            },
            "body": { "mode": "raw", "raw": "{\n  \"personId\": \"dave\"\n}" }
          }
        }
      ]
    },
    {
      "name": "Tasks",
      "item": [
        {
          "name": "Create task1 (Alice)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{ALICE_TOKEN}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/tasks",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "tasks"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"task1\",\n  \"title\": \"Review compliance\",\n  \"assigneePersonId\": \"dave\",\n  \"relatedCircularId\": \"circ1\"\n}"
            }
          }
        },
        {
          "name": "GET /api/tasks (Dave)",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{DAVE_TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/tasks",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "tasks"]
            }
          }
        },
        {
          "name": "PATCH /api/tasks/task1/complete (Dave)",
          "request": {
            "method": "PATCH",
            "header": [
              { "key": "Authorization", "value": "Bearer {{DAVE_TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/tasks/task1/complete",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "tasks", "task1", "complete"]
            }
          }
        },
        {
          "name": "GET /api/tasks (Charlie - manager)",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{CHARLIE_TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/tasks",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "tasks"]
            }
          }
        }
      ]
    },
    {
      "name": "Access Checks",
      "item": [
        {
          "name": "Alice can CRUD circulars (dept1)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{BASE_URL}}/api/access/check",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "access", "check"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": \"person:alice\",\n  \"relation\": \"can_crud_circulars\",\n  \"object\": \"department:dept1\"\n}"
            }
          }
        },
        {
          "name": "Eve can read circ1 (expect false)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{BASE_URL}}/api/access/check",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "access", "check"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": \"person:eve\",\n  \"relation\": \"can_read\",\n  \"object\": \"circular:circ1\"\n}"
            }
          }
        }
      ]
    }
  ]
}
